{
  "name": "node_keyboard",
  "version": "0.0.4",
  "description": "Windows NT Keyboard Control Library",
  "main": "node_keyboard",
  "repository": {
    "url": ""
  },
  "keywords": [
    "keyboard",
    "windows"
  ],
  "author": {
    "name": "Joon-Ku Kang"
  },
  "license": "MIT",
  "dependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "# node_keyboard\r\n\r\nWindows NT Keyboard Control Library for Node.js.\r\n\r\n## Key Types\r\n\r\nLots of key types are available.\r\n```\r\nvar keyboard = require('node_keyboard');\r\n\r\nkeyboard.Key_NoKey,\r\nkeyboard.Key_A, ... , keyboard.Key_Z,\r\nkeyboard.Key_0, ... , keyboard.Key_9,\r\nkeyboard.Key_F1, ... , keyboard.Key_F24,\r\nkeyboard.Key_Numpad0, ... , keyboard.Key_Numpad9,\r\nkeyboard.Key_Escape\r\nkeyboard.Key_Space\r\nkeyboard.Key_Return\r\nkeyboard.Key_Backspace\r\nkeyboard.Key_Tab\r\nkeyboard.Key_Shift_L\r\nkeyboard.Key_Shift_R\r\nkeyboard.Key_Control_L\r\nkeyboard.Key_Control_R\r\nkeyboard.Key_Alt_L\r\nkeyboard.Key_Alt_R\r\nkeyboard.Key_Win_L\r\nkeyboard.Key_Win_R\r\nkeyboard.Key_Apps\r\nkeyboard.Key_CapsLock\r\nkeyboard.Key_NumLock\r\nkeyboard.Key_ScrollLock\r\nkeyboard.Key_PrintScreen\r\nkeyboard.Key_Pause\r\nkeyboard.Key_Insert\r\nkeyboard.Key_Delete\r\nkeyboard.Key_PageUP\r\nkeyboard.Key_PageDown\r\nkeyboard.Key_Home\r\nkeyboard.Key_End\r\nkeyboard.Key_Left\r\nkeyboard.Key_Right\r\nkeyboard.Key_Up\r\nkeyboard.Key_Down\r\nkeyboard.Key_NumpadAdd\r\nkeyboard.Key_NumpadSubtract\r\nkeyboard.Key_NumpadMultiply\r\nkeyboard.Key_Slash\r\nkeyboard.Key_Period\r\nkeyboard.Key_Comma\r\nkeyboard.Key_Hangul\r\nkeyboard.Key_Semicolon\r\nkeyboard.Key_BackQuote\r\nkeyboard.Key_BraceOpen\r\nkeyboard.Key_BackSlash\r\nkeyboard.Key_BraceClose\r\nkeyboard.Key_SingleQuote\r\n```\r\n## API\r\n```\r\nvar keyboard = require('node_keyboard');\r\n\r\nkeyboard.type(keyboard.Key_PrintScreen);\r\n\r\nkeyboard.press(keyboard.Key_Comma);\r\nkeyboard.release(keyboard.Key_Comma);\r\n\r\nkeyboard.typeString(\"Hello World!\", \"en\", 2800, function() {\r\n    console.log(\"This is callback.\");\r\n}); // Language : \"en\", Duration : 2800ms\r\n/*\r\nCurrently language parameter only supports \"ko\"(Korean) and \"en\"(English).\r\nI highly recommend using \"en\" as the default language parameter.\r\nFor korean, we can use \r\n\r\nkeyboard.typeString(\"안녕하세요!\", \"ko\", 2800, function() {\r\n    console.log(\"This is callback.\");\r\n}); \r\n*/\r\n\r\nkeyboard.typeString(\"@#$%^&*()_-+=`~<>,./?;:'\\\"[]{}\\|ScdWB!ws\", \"en\", 2800, function() {\r\n    console.log(\"This is callback.\");\r\n}); // It always work.\r\n\r\nvar keyCode = keyboard.getKeyCode(\"a\");\r\nkeyboard.type(keyCode); // type \"a\"\r\n\r\nvar capsLock = keyboard.isCapsLock(); // Check whether capsLock is enabled.\r\n\r\nkeyboard.toggleCapsLock(); // Toggle capsLock key.\r\n\r\nkeyboard.setCapsLock(true);\r\n\r\nvar english = keyboard.isEnglishMode(); // true, false\r\n// For english keyboard users this is a useless function b/c it will always return true.\r\n\r\nvar korean = keyboard.isKoreanMode(); // true, false\r\n// Only for Korean users. This function is currently very unstable.\r\n\r\nkeyboard.toggleMode(); // Toggle Keyboard Mode between English and Korean.\r\n\r\nkeyboard.setKoreanMode();\r\n\r\nkeyboard.setEnglishMode();\r\n\r\nkeyboard.changeLanguageFlag();\r\n// This is just for experiment. \r\n```",
  "readmeFilename": "README.md",
  "_id": "node_keyboard@0.0.4",
  "_shasum": "48e7aa4f8e2611b4d43e5ca488ebdb04aa4f502d",
  "_from": "node_keyboard@",
  "_resolved": "https://registry.npmjs.org/node_keyboard/-/node_keyboard-0.0.4.tgz"
}
